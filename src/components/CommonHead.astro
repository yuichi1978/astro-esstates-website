---
import "@fontsource/poppins/100.css";
import "@fontsource/poppins/200.css";
import "@fontsource/poppins/300.css";
import "@fontsource/poppins/400.css";
import "@fontsource/poppins/500.css";
import "@fontsource/poppins/600.css";
import "@fontsource/poppins/700.css";
import "@fontsource/poppins/800.css";
import "@fontsource/poppins/900.css";
import "@fontsource/poppins/100-italic.css";
import "@fontsource/poppins/200-italic.css";
import "@fontsource/poppins/300-italic.css";
import "@fontsource/poppins/400-italic.css";
import "@fontsource/poppins/500-italic.css";
import "@fontsource/poppins/600-italic.css";
import "@fontsource/poppins/700-italic.css";
import "@fontsource/poppins/800-italic.css";
import "@fontsource/poppins/900-italic.css";
import "../styles/global.css";
import { config } from "@fortawesome/fontawesome-svg-core";
import "@fortawesome/fontawesome-svg-core/styles.css";
import { ViewTransitions } from "astro:transitions";
config.autoAddCss = false;

type Props = {
  title: string;
  description: string;
};

const response = await fetch(`${import.meta.env.WPGRAPHQL_URL}`, {
  method: "POST",
  headers: {
    "content-type": "application/json",
  },
  body: JSON.stringify({
    query: `
      query MetadataQuery {
        cssVariables
        siteLogo {
          sourceUrl
        }
      }
    `,
  }),
});

const { data } = await response.json();
const { title, description } = Astro.props;
---

<head>
  <meta charset="utf-8" />
  {
    !!data.siteLogo?.sourceUrl && (
      <link rel="icon" href={data.siteLogo.sourceUrl} />
    )
  }
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <meta name="description" content={description} />
  {!!data.cssVariables && <style set:html={`:root{${data.cssVariables}}`} />}
  <ViewTransitions />
</head>
